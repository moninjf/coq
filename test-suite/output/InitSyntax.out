Inductive sig2 (A : Type) (P Q : A -> Prop) : Type :=
    exist2 : forall x : A, P x -> Q x -> {x : A | P x & Q x}.

Arguments sig2 [A]%type_scope (P Q)%type_scope
Arguments exist2 [A]%type_scope (P Q)%function_scope x _ _
exists x : nat, x = x
     : Prop
fun b : bool => if b then b else b
     : bool -> bool
